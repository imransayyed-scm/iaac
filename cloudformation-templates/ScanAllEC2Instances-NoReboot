AWSTemplateFormatVersion: '2010-09-09'
Description: |
  Deploys an SSM Automation Document that scans all SSM-managed EC2 instances without reboot.

Parameters:
  S3BucketName:
    Type: String
    Default: pchfl-ssm-patching-artifacts-3p-uat
    Description: (Unused now) S3 bucket name for storing patch scan reports (retained for future use)

Resources:

  SSMScanAutomationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: SSMScanAutomationRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ssm.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: SSMScanPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:DescribeInstanceInformation
                  - ssm:DescribeInstancePatchStates
                  - ssm:SendCommand
                  - ssm:ListCommands
                  - ssm:GetCommandInvocation
                  - ssm:ListCommandInvocations
                  - ec2:DescribeInstances
                Resource: '*'

  PatchScanSSMDocument:
    Type: AWS::SSM::Document
    UpdateMethod: NewVersion
    Properties:
      DocumentType: Automation
      Name: ScanAllEC2Instances-NoReboot
      Content:
        schemaVersion: '0.3'
        description: |
          Scans all Systems Manager managed EC2 instances for missing patches using Patch Manager without rebooting.
        assumeRole: '{{ AutomationAssumeRole }}'
        parameters:
          AutomationAssumeRole:
            type: String
            description: IAM role for SSM automation execution
        mainSteps:
          - name: getManagedInstances
            action: aws:executeAwsApi
            inputs:
              Service: ssm
              Api: DescribeInstanceInformation
            outputs:
              - Name: InstanceIds
                Selector: $..InstanceId
                Type: StringList

          - name: runPatchScan
            action: aws:runCommand
            inputs:
              DocumentName: AWS-RunPatchBaseline
              InstanceIds: '{{ getManagedInstances.InstanceIds }}'
              Parameters:
                Operation: Scan
                RebootOption: NoReboot
            timeoutSeconds: 600

          - name: getComplianceData
            action: aws:executeAwsApi
            inputs:
              Service: ssm
              Api: DescribeInstancePatchStates
              InstanceIds: '{{ getManagedInstances.InstanceIds }}'
            outputs:
              - Name: InstancePatchStates
                Selector: $.InstancePatchStates
                Type: MapList

Outputs:
  SSMDocumentName:
    Description: Name of the SSM Automation Document
    Value: !Ref PatchScanSSMDocument

  AutomationRoleARN:
    Description: ARN of the IAM role for executing the SSM Automation
    Value: !GetAtt SSMScanAutomationRole.Arn
